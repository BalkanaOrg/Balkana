@model List<PlayerStatsResponseModel>

@section Styles {
    <link rel="stylesheet" href="~/css/stats.css" asp-append-version="true" />
    <style>
        .series-header {
            background: linear-gradient(135deg, rgba(0, 123, 255, 0.1), rgba(220, 53, 69, 0.1));
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }

        .series-info {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .series-icon {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: linear-gradient(135deg, #007bff, #dc3545);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
        }

        .series-details h1 {
            color: white;
            margin: 0;
            font-size: 2.5rem;
            font-weight: 700;
        }

        .series-meta {
            color: rgba(255, 255, 255, 0.7);
            font-size: 1.1rem;
            margin: 5px 0;
        }

        .series-summary {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .summary-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .summary-value {
            font-size: 2rem;
            font-weight: 700;
            color: white;
            margin-bottom: 5px;
        }

        .summary-label {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
        }

        .players-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
        }

        .player-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            padding: 20px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .player-card:hover {
            background: rgba(255, 255, 255, 0.08);
            border-color: rgba(255, 255, 255, 0.2);
        }

        .player-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 15px;
        }

        .player-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, #007bff, #dc3545);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
        }

        .player-name {
            color: white;
            font-size: 1.2rem;
            font-weight: 600;
            margin: 0;
        }

        .player-nickname {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
        }

        .player-stats {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
        }

        .stat-item {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 6px;
            padding: 10px;
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .stat-label {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.8rem;
            margin-bottom: 3px;
        }

        .stat-value {
            color: white;
            font-size: 1.1rem;
            font-weight: 600;
        }

        .no-data {
            text-align: center;
            color: rgba(255, 255, 255, 0.6);
            padding: 40px;
            font-size: 1.1rem;
        }
    </style>
}

@if (Model.Any())
{
    <div class="series-header">
        <div class="series-info">
            <div class="series-icon">
                <i class="fi fi-rr-trophy"></i>
            </div>
            <div class="series-details">
                <h1>Series Statistics</h1>
                <div class="series-meta">
                    @Model.Count players â€¢ @Model.Sum(p => p.TotalMatches) total matches
                </div>
            </div>
        </div>

        <div class="series-summary">
            <div class="summary-card">
                <div class="summary-value">@Model.Count</div>
                <div class="summary-label">Players</div>
            </div>
            <div class="summary-card">
                <div class="summary-value">@Model.Sum(p => p.TotalMatches)</div>
                <div class="summary-label">Total Matches</div>
            </div>
            <div class="summary-card">
                <div class="summary-value">@(Model.Where(p => p.FirstMatchDate.HasValue).Min(p => p.FirstMatchDate)?.ToString("MMM yyyy") ?? "N/A")</div>
                <div class="summary-label">First Match</div>
            </div>
            <div class="summary-card">
                <div class="summary-value">@(Model.Where(p => p.LastMatchDate.HasValue).Max(p => p.LastMatchDate)?.ToString("MMM yyyy") ?? "N/A")</div>
                <div class="summary-label">Last Match</div>
            </div>
        </div>
    </div>

    <div class="players-grid">
        @foreach (var player in Model)
        {
            <div class="player-card">
                <div class="player-header">
                    <div class="player-avatar">
                        @player.PlayerName.Substring(0, 1).ToUpper()
                    </div>
                    <div>
                        <h4 class="player-name">@player.PlayerName</h4>
                        <div class="player-nickname">@player.PlayerNickname</div>
                    </div>
                </div>
                
                <div class="player-stats">
                    <div class="stat-item">
                        <div class="stat-label">Matches</div>
                        <div class="stat-value">@player.TotalMatches</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-label">Provider</div>
                        <div class="stat-value">@player.Provider</div>
                    </div>
                    
                    @if (player.CS2Stats != null)
                    {
                        <div class="stat-item">
                            <div class="stat-label">K/D Ratio</div>
                            <div class="stat-value">@player.CS2Stats.KDRatio.ToString("F2")</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">ADR</div>
                            <div class="stat-value">@player.CS2Stats.ADR.ToString("F1")</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">Kills (@player.CS2Stats.Headshots HS)</div>
                            <div class="stat-value">@player.CS2Stats.TotalKills</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">Deaths</div>
                            <div class="stat-value">@player.CS2Stats.TotalDeaths</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">5K Rounds</div>
                            <div class="stat-value">@player.CS2Stats._5k</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">4K Rounds</div>
                            <div class="stat-value">@player.CS2Stats._4k</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">3K Rounds</div>
                            <div class="stat-value">@player.CS2Stats._3k</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">2K Rounds</div>
                            <div class="stat-value">@player.CS2Stats._2k</div>
                        </div>
                    }
                    
                    @if (player.LoLStats != null)
                    {
                        <div class="stat-item">
                            <div class="stat-label">K/D Ratio</div>
                            <div class="stat-value">@player.LoLStats.KDRatio.ToString("F2")</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">KPA Ratio</div>
                            <div class="stat-value">@player.LoLStats.KPARatio.ToString("F2")</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">Kills</div>
                            <div class="stat-value">@player.LoLStats.TotalKills</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-label">Deaths</div>
                            <div class="stat-value">@player.LoLStats.TotalDeaths</div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="no-data">
        <i class="fi fi-rr-trophy" style="font-size: 3rem; margin-bottom: 15px; display: block;"></i>
        No series statistics found.
    </div>
}