@model Balkana.Models.Tournaments.RiotTournamentListViewModel

@{
    ViewData["Title"] = "Riot Tournaments";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Riot Tournament Management</h2>
        <a asp-action="CreateRiotTournament" class="btn btn-primary">
            <i class="fas fa-plus"></i> Create New Tournament
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Tournaments.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Region</th>
                        <th>Riot Tournament ID</th>
                        <th>Provider ID</th>
                        <th>Linked Tournament</th>
                        <th>Codes</th>
                        <th>Created</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tournament in Model.Tournaments)
                    {
                        <tr>
                            <td>@tournament.Id</td>
                            <td><strong>@tournament.Name</strong></td>
                            <td><span class="badge bg-info">@tournament.Region</span></td>
                            <td>@tournament.RiotTournamentId</td>
                            <td>@tournament.ProviderId</td>
                            <td>
                                @if (tournament.TournamentId.HasValue)
                                {
                                    <span class="badge bg-success">@tournament.TournamentName</span>
                                }
                                else
                                {
                                    <span class="text-muted">Not linked</span>
                                }
                            </td>
                            <td>
                                <span class="badge bg-primary">@tournament.TotalCodes Total</span>
                                <span class="badge bg-success">@tournament.UsedCodes Used</span>
                                <span class="badge bg-warning text-dark">@tournament.UnusedCodes Unused</span>
                            </td>
                            <td>@tournament.CreatedAt.ToString("yyyy-MM-dd")</td>
                            <td>
                                <a asp-action="RiotTournamentDetails" asp-route-id="@tournament.Id" class="btn btn-sm btn-info">
                                    <i class="fas fa-eye"></i> Details
                                </a>
                                <a asp-action="GenerateTournamentCodes" asp-route-id="@tournament.Id" class="btn btn-sm btn-success">
                                    <i class="fas fa-code"></i> Generate Codes
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i> No Riot tournaments found. Create one to get started!
        </div>
    }

    <div class="mt-4">
        <h4>What is the Riot Tournament API?</h4>
        <p>
            The Riot Tournament API allows you to create custom League of Legends tournaments with tournament codes. 
            Players use these codes to create custom games, and you can then import match data directly from Riot's API.
        </p>
        <ul>
            <li><strong>Create Tournament:</strong> Register a tournament with Riot API</li>
            <li><strong>Generate Codes:</strong> Create tournament codes for specific matches</li>
            <li><strong>Import Matches:</strong> Use the existing Match History Importer to import tournament match data</li>
        </ul>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-dismiss alerts after 5 seconds
        setTimeout(function() {
            $('.alert').fadeOut('slow');
        }, 5000);
    </script>
}

