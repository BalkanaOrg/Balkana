@model AllTeamsQueryModel
@{
    ViewData["Title"] = "Balkana Teams";
}

<link rel="stylesheet" href="~/css/rankings.css" />

<div class="rankings-container">
    <!-- Header Section -->
    <div class="rankings-header">
        <div class="header-content">
            <h1 class="main-title">BALKANA </h1>
            <h1 class="main-title">
                @(string.IsNullOrWhiteSpace(Model.SelectedGame)
                ? "TEAMS"
                : Model.SelectedGame.ToUpper())
            </h1>
            <div class="title-underline"></div>
            <p class="subtitle">Rankings</p>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="search-filter-section">
        <form method="get" class="rankings-form">
            <div class="search-container">
                <input asp-for="SearchTerm"
                       class="search-input"
                       placeholder="Search teams by tag or name..." />
                <div class="search-icon">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                    </svg>
                </div>
            </div>

            <div class="filter-buttons">
                @foreach (var game in Model.Games)
                {
                    <a class="filter-btn @(Model.Games.Contains(game) ? "active" : "")"
                       asp-route-game="@game">
                        @game
                    </a>
                }
            </div>
        </form>
    </div>

    <!-- Rankings Grid -->
    <div class="rankings-grid">
        <partial name="_TeamsPartial" model="@Model.Teams" />
    </div>

    <!-- No Results Message -->
    @if (!Model.Teams.Any())
    {
        <div class="no-results">
            <div class="no-results-icon">🔍</div>
            <h3 class="no-results-title">No teams found</h3>
            <p class="no-results-text">Try adjusting your search or filter criteria</p>
        </div>
    }

    <!-- Pagination -->
    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }
        var maxPage = Math.Ceiling((double)Model.TotalTeams / AllTeamsQueryModel.TeamsPerPage);
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Teams.Any();
    }

    <div class="pagination-container">
        <nav class="pagination-nav">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link @(Model.CurrentPage == 1 ? "disabled" : "")"
                       asp-controller="Teams"
                       asp-action="Index"
                       asp-route-currentPage="@(previousPage)"
                       asp-route-region="@Model.Games"
                       asp-route-searchTerm="@Model.SearchTerm">
                        <span>‹</span>
                    </a>
                </li>

                @for (int i = 1; i <= maxPage; i++)
                {
                    <li class="page-item">
                        <a class="page-link @(Model.CurrentPage == i ? "active" : "")"
                           asp-controller="Teams"
                           asp-action="Index"
                           asp-route-currentPage="@i"
                           asp-route-region="@Model.Games"
                           asp-route-searchTerm="@Model.SearchTerm">
                            @i
                        </a>
                    </li>
                }

                <li class="page-item">
                    <a class="page-link @(shouldButtonBeDisabled ? "disabled" : "")"
                       asp-controller="Teams"
                       asp-action="Index"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-region="@Model.Games"
                       asp-route-searchTerm="@Model.SearchTerm">
                        <span>›</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>

    <!-- Footer Stats -->
    <div class="footer-stats">
        <div class="stats-container">
            <div class="stat-box">
                <div class="stat-number">@Model.Teams.Count()</div>
                <div class="stat-text">Teams</div>
            </div>
            <div class="stat-divider"></div>
            <div class="stat-box">
                <div class="stat-number">@Model.AbsoluteNumberOfTeams</div>
                <div class="stat-text">Total</div>
            </div>
            <div class="stat-divider"></div>
            <div class="stat-box">
                <div class="stat-number">@Model.Games.Count()</div>
                <div class="stat-text">Esports</div>
            </div>
        </div>
    </div>
</div>