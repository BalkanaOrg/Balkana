@model AllTeamsQueryModel
@{
    ViewData["Title"] = "Teams";
}

<div class="container-fluid bg-dark text-light p-4 rounded">
    <form method="get">
        <div class="form-group col-md-4">
            <label asp-for="SearchTerm" class="form-label text-light">Search by Tag or Name</label>
            <input asp-for="SearchTerm" class="form-control bg-secondary text-light" placeholder="DIV, MASE, etc..." />
        </div>

        <div class="justify-content-center mt-3">
            @* Game selection *@
            <div class="btn-group d-flex justify-content-center">
                @foreach (var game in Model.Games)
                {
                    <a class="btn btn-outline-light"
                       asp-route-game="@game">
                        @game
                    </a>
                }
            </div>
        </div>

        @* Teams control *@
        <div class="accordion accordion-flush mt-4" id="accordionFlushExample">
            <partial name="_TeamsPartial" model="@Model.Teams" />
        </div>
    </form>

    @if (!Model.Teams.Any())
    {
        <h2 class="text-center text-warning mt-4">No teams found by the given criteria!</h2>
    }

    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }
        var maxPage = Math.Ceiling((double)Model.TotalTeams / AllTeamsQueryModel.TeamsPerPage);
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Teams.Any();
    }

    <div class="row justify-content-center mt-4">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link bg-dark text-light @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                       aria-label="Previous"
                       asp-controller="Teams"
                       asp-action="Index"
                       asp-route-currentPage="@(previousPage)"
                       asp-route-region="@Model.Games"
                       asp-route-searchTerm="@Model.SearchTerm">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>

                @for (int i = 1; i <= maxPage; i++)
                {
                    <li class="page-item">
                        <a class="page-link bg-dark text-light"
                           asp-controller="Teams"
                           asp-action="Index"
                           asp-route-currentPage="@i"
                           asp-route-region="@Model.Games"
                           asp-route-searchTerm="@Model.SearchTerm">
                            @i
                        </a>
                    </li>
                }

                <li class="page-item">
                    <a class="page-link bg-dark text-light @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                       aria-label="Next"
                       asp-controller="Teams"
                       asp-action="Index"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-region="@Model.Games"
                       asp-route-searchTerm="@Model.SearchTerm">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>
